.TH "/home/kajanan/Github/ray_tracer/src/common/include/common/check_cuda_errors.hpp" 3 "Fri Dec 24 2021" "ray_tracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/kajanan/Github/ray_tracer/src/common/include/common/check_cuda_errors.hpp \- Defines helper functions to check cuda errors\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'cuda\&.h'\fP
.br
\fC#include 'cuda_runtime\&.h'\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <string>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCHECK_CUDA_ERRORS\fP(result)"
.br
.RI "A macro that checks if result is cudaSuccess\&. If it's not, it will terminate the program\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBRayTracer::cuda::checkCudaErrors\fP (cudaError_t result, const char *filename, int line_number)"
.br
.RI "Checks CUDA errors and terminates upon an error\&. The wrapper macro CHECK_CUDA_ERRORS(cudaError_t\&. "
.in -1c
.SH "Detailed Description"
.PP 
Defines helper functions to check cuda errors\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define CHECK_CUDA_ERRORS(result)"
\fBValue:\fP
.PP
.nf
    { \
        checkCudaErrors(result, __FILE__, __LINE__); \
    }
.fi
.PP
A macro that checks if result is cudaSuccess\&. If it's not, it will terminate the program\&. 
.SH "Function Documentation"
.PP 
.SS "void RayTracer::cuda::checkCudaErrors (cudaError_t result, const char * filename, int line_number)\fC [inline]\fP"

.PP
Checks CUDA errors and terminates upon an error\&. The wrapper macro CHECK_CUDA_ERRORS(cudaError_t\&. 
.PP
\fBParameters\fP
.RS 4
\fIresult\fP The result of a cuda call 
.br
\fIfilename\fP The filename that the error occurred in 
.br
\fIline_number\fP The line number that the error occurred in 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for ray_tracer from the source code\&.
