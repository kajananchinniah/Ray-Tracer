.TH "RayTracer::ImageUtils" 3 "Thu Dec 23 2021" "ray_tracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RayTracer::ImageUtils
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <image_utils\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBsaveImage\fP (const char *filename, const \fBImage\fP &image)"
.br
.RI "Saves an image to disk\&. "
.ti -1c
.RI "static std::optional< \fBImage\fP > \fBreadImage\fP (const char *filepath, ImageEncodings requested_encoding=ImageEncodings::kBGR8)"
.br
.RI "Reads an image to disk\&. "
.ti -1c
.RI "static u64 \fBcalculatePitch\fP (u64 width, u64 channels)"
.br
.RI "Calculates the pitch of an image\&. "
.ti -1c
.RI "static u64 \fBcalculateFlattenedIndex\fP (const \fBImage\fP &image, u64 u, u64 v)"
.br
.RI "Calculates the flattened index of an image\&. "
.ti -1c
.RI "static u64 \fBcalculatePitch\fP (const \fBImage\fP &image)"
.br
.RI "Calculates the pitch of an image\&. "
.ti -1c
.RI "static u64 \fBcalculateColourStep\fP (const \fBImage\fP &image)"
.br
.RI "Calculates the colour step of an image\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains utility functions to work with images\&. For the definition of an image, see \fBimage\&.hpp\fP 
.SH "Member Function Documentation"
.PP 
.SS "u64 RayTracer::ImageUtils::calculateColourStep (const \fBImage\fP & image)\fC [static]\fP"

.PP
Calculates the colour step of an image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimage\fP The image whose properties will be used 
.RE
.PP

.SS "u64 RayTracer::ImageUtils::calculateFlattenedIndex (const \fBImage\fP & image, u64 u, u64 v)\fC [static]\fP"

.PP
Calculates the flattened index of an image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimage\fP The image whose properties will be used 
.br
\fIu\fP The u coordinate (e\&.g\&. along the width) of interest 
.br
\fIv\fP The v coordinate (e\&.g\&. along the height) of interest 
.RE
.PP

.SS "u64 RayTracer::ImageUtils::calculatePitch (const \fBImage\fP & image)\fC [static]\fP"

.PP
Calculates the pitch of an image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimage\fP The image whose properties will be used 
.RE
.PP

.SS "u64 RayTracer::ImageUtils::calculatePitch (u64 width, u64 channels)\fC [static]\fP"

.PP
Calculates the pitch of an image\&. 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The width to use 
.br
\fIchannels\fP The number of channels 
.RE
.PP
\fBReturns\fP
.RS 4
The pitch of the image 
.RE
.PP

.SS "std::optional< \fBImage\fP > RayTracer::ImageUtils::readImage (const char * filepath, ImageEncodings requested_encoding = \fCImageEncodings::kBGR8\fP)\fC [static]\fP"

.PP
Reads an image to disk\&. 
.PP
\fBParameters\fP
.RS 4
\fIfilepath\fP The filepath to the image that should be read 
.br
\fIrequested_encoding\fP The desired encoding of the image 
.RE
.PP
\fBReturns\fP
.RS 4
Returns the image if successful, or std::nullopt otherwise 
.RE
.PP

.SS "bool RayTracer::ImageUtils::saveImage (const char * filename, const \fBImage\fP & image)\fC [static]\fP"

.PP
Saves an image to disk\&. 
.PP
\fBParameters\fP
.RS 4
\fIfilename\fP The filename to save the image to 
.br
\fIimage\fP The image to save 
.RE
.PP
\fBReturns\fP
.RS 4
Whether the save was successful or not 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ray_tracer from the source code\&.
