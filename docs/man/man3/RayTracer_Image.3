.TH "RayTracer::Image" 3 "Fri Dec 24 2021" "ray_tracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RayTracer::Image
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <image\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBImage\fP (\fBs64\fP w, \fBs64\fP h, \fBImageEncodings\fP e)"
.br
.ti -1c
.RI "__device__ __host__ \fBs64\fP \fBsize\fP () const"
.br
.RI "Calculates the size of the image's data buffer\&. "
.ti -1c
.RI "__device__ __host__ \fBs64\fP \fBpitch\fP () const"
.br
.RI "Calculates the pitch of the image\&. "
.ti -1c
.RI "__device__ __host__ \fBs64\fP \fBcolourStep\fP () const"
.br
.RI "Calculates the colour step of the image\&. "
.ti -1c
.RI "__device__ __host__ \fBs64\fP \fBflattenedIndex\fP (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c) const"
.br
.RI "Calculates the flattened index to access an element\&. "
.ti -1c
.RI "__device__ __host__ \fBu8\fP & \fBat\fP (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c)"
.br
.RI "Gets the element at (u, v, c) in the image\&. "
.ti -1c
.RI "__device__ __host__ const \fBu8\fP & \fBat\fP (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c) const"
.br
.RI "Gets the element at (u, v, c) in the image\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBs64\fP \fBwidth\fP {}"
.br
.RI "The width of the image\&. "
.ti -1c
.RI "\fBs64\fP \fBheight\fP {}"
.br
.RI "The height of the image\&. "
.ti -1c
.RI "\fBs64\fP \fBchannels\fP {}"
.br
.RI "The number of channels of the image\&. "
.ti -1c
.RI "\fBImageEncodings\fP \fBencoding\fP {}"
.br
.RI "The encoding of the image\&. "
.ti -1c
.RI "std::unique_ptr< \fBu8\fP[], decltype(&cudaFree)> \fBdata_buffer\fP {nullptr, cudaFree}"
.br
.RI "A data buffer holding the pixels of an image\&. "
.in -1c
.SH "Detailed Description"
.PP 
Holds relevant properties to work with images\&. The helper functions in \fBimage_utils\&.hpp\fP should be used to access the data\&. 
.SH "Member Function Documentation"
.PP 
.SS "__device__ __host__ \fBu8\fP & RayTracer::Image::at (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c)\fC [inline]\fP"

.PP
Gets the element at (u, v, c) in the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP The u coordinate (e\&.g\&. along the width) of interest 
.br
\fIv\fP The v coordinate (e\&.g\&. along the height) of interest 
.br
\fIc\fP The c coordinate (e\&.g\&. along the channel) of interest 
.RE
.PP
\fBReturns\fP
.RS 4
The data element 
.RE
.PP

.SS "__device__ __host__ const \fBu8\fP & RayTracer::Image::at (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c) const\fC [inline]\fP"

.PP
Gets the element at (u, v, c) in the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP The u coordinate (e\&.g\&. along the width) of interest 
.br
\fIv\fP The v coordinate (e\&.g\&. along the height) of interest 
.br
\fIc\fP The c coordinate (e\&.g\&. along the channel) of interest 
.RE
.PP
\fBReturns\fP
.RS 4
The data element 
.RE
.PP

.SS "__device__ __host__ \fBs64\fP RayTracer::Image::colourStep () const\fC [inline]\fP"

.PP
Calculates the colour step of the image\&. 
.PP
\fBReturns\fP
.RS 4
The colour step of the image 
.RE
.PP

.SS "__device__ __host__ \fBs64\fP RayTracer::Image::flattenedIndex (\fBs64\fP u, \fBs64\fP v, \fBs64\fP c) const\fC [inline]\fP"

.PP
Calculates the flattened index to access an element\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP The u coordinate (e\&.g\&. along the width) of interest 
.br
\fIv\fP The v coordinate (e\&.g\&. along the height) of interest 
.br
\fIc\fP The c coordinate (e\&.g\&. along the channel) of interest 
.RE
.PP
\fBReturns\fP
.RS 4
The flattened index 
.RE
.PP

.SS "__device__ __host__ \fBs64\fP RayTracer::Image::pitch () const\fC [inline]\fP"

.PP
Calculates the pitch of the image\&. 
.PP
\fBReturns\fP
.RS 4
The pitch of the image 
.RE
.PP

.SS "__device__ __host__ \fBs64\fP RayTracer::Image::size () const\fC [inline]\fP"

.PP
Calculates the size of the image's data buffer\&. 
.PP
\fBReturns\fP
.RS 4
The size of the image data buffer 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ray_tracer from the source code\&.
